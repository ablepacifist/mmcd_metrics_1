name: Deploy to AWS
on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual invocation of the workflow
jobs:
  build:
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    outputs:
      image: ${{ steps.build-image.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Configure AWS credentials
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # Use GitHub OIDC provider
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.repository }}
          REF_NAME: ${{ github.ref_name }}
          COMMIT_SHA: ${{ github.sha }}
        run: |
          export IMAGE_TAG=${REF_NAME}-${COMMIT_SHA:0:7}
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
             --cache-from type=registry,ref=$ECR_REGISTRY/$ECR_REPOSITORY:cache \
             --cache-to type=registry,ref=$ECR_REGISTRY/$ECR_REPOSITORY:cache,mode=max \
             .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: build
    steps:
      - name: Configure AWS credentials
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: us-east-2

      - name: Deploy to App Runner Image
        id: deploy-apprunner
        uses: awslabs/amazon-app-runner-deploy@main
        with:
          service: mmcd-metrics-${{ github.ref_name }}
          image: ${{ needs.build.outputs.image }}
          port: 3838
          access-role-arn: ${{ secrets.AWS_ROLE }}
          instance-role-arn: ${{ secrets.AWS_ROLE }}
          region: us-east-2
          cpu: 2
          memory: 4
          wait-for-service-stability-seconds: 1200

      - name: App Runner URL
        run: echo "App runner URL ${{ steps.deploy-apprunner.outputs.service-url }}"
